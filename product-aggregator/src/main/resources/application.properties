spring.application.name=product-aggregator
#otel.traces.exporter=otlp
#spring.reactor.context-propagation=AUTO
#opentelemetry.enabled=true
# OpenTelemetry Configuration
otel.traces.exporter=otlp
otel.metrics.exporter=otlp
otel.logs.exporter=otlp
#otel.exporter.otlp.endpoint=http://localhost:4317
otel.exporter.otlp.protocol=grpc
otel.service.name=product-aggregator
#logging.level.io.opentelemetry=DEBUG
otel.exporter.otlp.endpoint=http://192.168.100.10:4317
#otel.exporter.otlp.traces.endpoint=http://192.168.100.10:4317
#otel.exporter.otlp.endpoint=grpc://192.168.100.10:4317
#otel.exporter.otlp.protocol=grpc
management.otlp.metrics.export.enabled=true
management.otlp.metrics.export.url=grpc://192.168.100.10:4317
management.prometheus.metrics.export.enabled=true



# Enable Prometheus metrics export
management.metrics.export.prometheus.enabled=true

# Expose the Prometheus endpoint
management.endpoints.web.exposure.include=prometheus

# Configure OpenTelemetry OTLP metrics exporter
opentelemetry.metrics.exporter.otlp.endpoint=http://192.168.100.10:4317
management.otlp.metrics.export.step=10s